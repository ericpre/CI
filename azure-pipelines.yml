variables:
  MPLBACKEND: agg # Necessary when running test which generate matplotlib figure
  ENV_NAME: test_env

trigger:
  tags:
    include:
    # build on any tag
    - '*'
  branches:
    include:
    # build on all branches
    - '*'

jobs:
- job:
  displayName: ubuntu-16.04
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python38:
        PYTHON_VERSION: '3.8'
      Python37:
        PYTHON_VERSION: '3.7'
      Python36:
        PYTHON_VERSION: '3.6'

  steps:
  - bash: |
      git clone --depth 1 git://github.com/ericpre/ci-scripts.git
    displayName: Clone ci-scripts repository

  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - template: ci-scripts/azure_pipelines/setup_anaconda_packages.yml

  - bash: |
      source activate $ENV_NAME
      # Install package using pip
      pip install https://github.com/hyperspy/hyperspy/archive/RELEASE_next_minor.zip
      conda list
    displayName: Install package

  - bash: |
      source activate $ENV_NAME
      # pytest --pyargs hyperspy
      python -c 'import hyperspy.api as hs'
    displayName: Run test suite

  # - template: ci-scripts/azure_pipelines/generate_distribution.yml

  # - template: ci-scripts/azure_pipelines/publish_distribution.yml

  #  Uncomment to upload artefact to Github release
  # - task: GithubRelease@0
  #   displayName: 'Update GitHub Release on tag only'
  #   # Release only on tag (branch name start with 'refs/tags/')
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #   inputs:
  #     # Set the token generated with github from the developer settings/personal access tokens menu
  #     gitHubConnection: github_token_name
  #     action: edit # Release should already have been created
  #     tag: $(Build.SourceBranchName)
  #     repositoryName: organisation_name/repository_name
  #     assets: $(Build.SourcesDirectory)/dist/*
  #     assetUploadMode: replace

- job:
  displayName: vs2017-win2016
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python38:
        PYTHON_VERSION: '3.8'
      Python36:
        PYTHON_VERSION: '3.6'

  steps:
  - bash: |
      git clone --depth 1 git://github.com/ericpre/ci-scripts.git
    displayName: Clone ci-scripts repository

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - template: ci-scripts/azure_pipelines/setup_anaconda_packages.yml

  - bash: |
      source activate $ENV_NAME
      # Install package using pip
      pip install https://github.com/hyperspy/hyperspy/archive/RELEASE_next_minor.zip
      conda list
    displayName: Install package

  - bash: |
      source activate $ENV_NAME
      # pytest --pyargs hyperspy
      python -c 'import hyperspy.api as hs'
    displayName: Run test suite

  # - template: ci-scripts/azure_pipelines/generate_distribution.yml

  # - template: ci-scripts/azure_pipelines/publish_distribution.yml

  #  Uncomment to upload artefact to Github release
  # - task: GithubRelease@0
  #   displayName: 'Update GitHub Release'
  #   # Release only on tag (branch name start with 'refs/tags/')
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #   inputs:
  #     # Set the token generated with github from the developer settings/personal access tokens menu
  #     gitHubConnection: github_token_name
  #     action: edit # Release should already have been created
  #     tag: $(Build.SourceBranchName)
  #     repositoryName: organisation_name/repository_name
  #     assets: $(Build.SourcesDirectory)/dist/*
  #     assetUploadMode: replace

- job:
  displayName: macOS-10.14
  pool:
    vmImage: 'macOS-10.14'
  strategy:
    matrix:
      Python38:
        PYTHON_VERSION: '3.8'
      Python36:
        PYTHON_VERSION: '3.6'

  steps:
  - bash: |
      git clone --depth 1 git://github.com/ericpre/ci-scripts.git
    displayName: Clone ci-scripts repository

  - bash: |
      echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
  # We need to take ownership if we want to update conda or install packages globally
  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda installation

  - template: ci-scripts/azure_pipelines/setup_anaconda_packages.yml

  - bash: |
      source activate $ENV_NAME
      # Install package using pip
      pip install https://github.com/hyperspy/hyperspy/archive/RELEASE_next_minor.zip
      conda list
    displayName: Install package

  - bash: |
      source activate $ENV_NAME
      # pytest --pyargs hyperspy
      python -c 'import hyperspy.api as hs'
    displayName: Run test suite

  # - template: ci-scripts/azure_pipelines/generate_distribution.yml

  # - template: ci-scripts/azure_pipelines/publish_distribution.yml

  #  Uncomment to upload artefact to Github release
  # - task: GithubRelease@0
  #   displayName: 'Update GitHub Release on tag only'
  #   # Release only on tag (branch name start with 'refs/tags/')
  #   condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  #   inputs:
  #     # Set the token generated with github from the developer settings/personal access tokens menu
  #     gitHubConnection: github_token_name
  #     action: edit # Release should already have been created
  #     tag: $(Build.SourceBranchName)
  #     repositoryName: organisation_name/repository_name
  #     assets: $(Build.SourcesDirectory)/dist/*
  #     assetUploadMode: replace

