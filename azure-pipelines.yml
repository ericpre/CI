variables:
  MPLBACKEND: agg # Necessary when running test which generate matplotlib figure
  ENV_NAME: test_env

trigger:
  tags:
    include:
    # build on any tag
    - '*'
  branches:
    include:
    # build on all branches
    - '*'

#resources:
#  repositories:
#  - repository: templates
#    type: github
#    name: hyperspy/ci-scripts
#    # For more details on service connection endpoint, see
#    # https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints
#    endpoint: service_connection_name # Azure DevOps service connection

strategy:
  matrix:
    Linux_Python38:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Linux_Python37:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.7'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Linux_Python36:
      vmImage: 'ubuntu-latest'
      PYTHON_VERSION: '3.6'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    MacOS_Python38:
      vmImage: 'macOS-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    MacOS_Python36:
      vmImage: 'macOS-latest'
      PYTHON_VERSION: '3.6'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)/mambaforge
    Windows_Python38:
      vmImage: 'windows-latest'
      PYTHON_VERSION: '3.8'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)\mambaforge
    Windows_Python36:
      vmImage: 'windows-latest'
      PYTHON_VERSION: '3.6'
      MAMBAFORGE_PATH: $(Agent.BuildDirectory)\mambaforge

pool:
  vmImage: '$(vmImage)'

steps:
- template: azure_pipelines/clone_ci-scripts_repo.yml
- template: azure_pipelines/install_mambaforge.yml
- template: azure_pipelines/activate_conda.yml
- template: azure_pipelines/setup_anaconda_packages.yml

- bash: |
    source activate $ENV_NAME
    # Install package using pip
    pip install --no-deps https://github.com/hyperspy/hyperspy/archive/RELEASE_next_minor.zip
    conda list
  displayName: Install package

- bash: |
    source activate $ENV_NAME
    # pytest --pyargs hyperspy
    python -c 'import hyperspy.api as hs'
  displayName: Run test suite

# - template: azure_pipelines/generate_distribution.yml@templates
# - template: azure_pipelines/publish_distribution.yml@templates
# - template: azure_pipelines/update_github_release.yml@templates
#   parameters:
#     # Set the token generated with github from the developer settings/personal
#     # access tokens menu in azure pipeline
#     github_token_name: ''
